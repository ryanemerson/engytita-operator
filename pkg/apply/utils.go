// Code generated by applyconfiguration-gen. DO NOT EDIT.

package apply

import (
	cacheregionv1alpha1 "github.com/engytita/engytita-operator/api/v1alpha1"
	v1alpha1 "github.com/engytita/engytita-operator/api/v1alpha1"
	cachev1alpha1 "github.com/engytita/engytita-operator/pkg/apply/cache/v1alpha1"
	applycacheregionv1alpha1 "github.com/engytita/engytita-operator/pkg/apply/cacheregion/v1alpha1"
	schema "k8s.io/apimachinery/pkg/runtime/schema"
)

// ForKind returns an apply configuration type for the given GroupVersionKind, or nil if no
// apply configuration type exists for the given GroupVersionKind.
func ForKind(kind schema.GroupVersionKind) interface{} {
	switch kind {
	// Group=cache, Version=v1alpha1
	case v1alpha1.SchemeGroupVersion.WithKind("Cache"):
		return &cachev1alpha1.CacheApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("CacheSpec"):
		return &cachev1alpha1.CacheSpecApplyConfiguration{}

		// Group=cacheregion, Version=v1alpha1
	case cacheregionv1alpha1.SchemeGroupVersion.WithKind("CacheRegion"):
		return &applycacheregionv1alpha1.CacheRegionApplyConfiguration{}
	case cacheregionv1alpha1.SchemeGroupVersion.WithKind("CacheRegionSpec"):
		return &applycacheregionv1alpha1.CacheRegionSpecApplyConfiguration{}

	}
	return nil
}
